on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag version you want to build"
  push:
    branches: 
      - master

name: docker push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4.1.1

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to DockerHub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tag to build
        id: tag
        run: |
          if [ -z "${{ github.event.inputs.tag }}" ]; then
            current_time=$(date +"%Y%m%d")
            echo "Use tag: $current_time"
            echo "tag=$current_time" >> $GITHUB_OUTPUT
          else
            echo "Use tag: ${{ github.event.inputs.tag }}"
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi



      - name: Determine whether to push to DockerHub
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "PUSH=true" >> $GITHUB_ENV

      - name: Prepare environment variables
        id: prepare
        run: |
          echo "docker_platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
          echo "docker_image=gindex/chislash" >> $GITHUB_OUTPUT
          echo "docker_tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
          echo "docker_is_push=${PUSH:-true}" >> $GITHUB_OUTPUT



      - name: Build tag & latest release
        run: |
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=${{ steps.prepare.outputs.docker_is_push }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.docker_tag }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --build-arg TAG=${{ steps.prepare.outputs.docker_tag }} \
          --file Dockerfile .